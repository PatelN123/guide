"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[173],{5318:function(e,n,t){t.d(n,{Zo:function(){return d},kt:function(){return u}});var a=t(7378);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function r(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,a,o=function(e,n){if(null==e)return{};var t,a,o={},i=Object.keys(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var c=a.createContext({}),p=function(e){var n=a.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):r(r({},n),e)),t},d=function(e){var n=p(e.components);return a.createElement(c.Provider,{value:n},e.children)},l={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},m=a.forwardRef((function(e,n){var t=e.components,o=e.mdxType,i=e.originalType,c=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),m=p(t),u=o,h=m["".concat(c,".").concat(u)]||m[u]||l[u]||i;return t?a.createElement(h,r(r({ref:n},d),{},{components:t})):a.createElement(h,r({ref:n},d))}));function u(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var i=t.length,r=new Array(i);r[0]=m;var s={};for(var c in n)hasOwnProperty.call(n,c)&&(s[c]=n[c]);s.originalType=e,s.mdxType="string"==typeof e?e:o,r[1]=s;for(var p=2;p<i;p++)r[p]=t[p];return a.createElement.apply(null,r)}return a.createElement.apply(null,t)}m.displayName="MDXCreateElement"},3023:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return c},contentTitle:function(){return p},metadata:function(){return d},toc:function(){return l},default:function(){return h}});var a,o=t(5773),i=t(808),r=(t(7378),t(5318)),s=["components"],c={},p="What are interactions?",d={unversionedId:"interactions/interactions",id:"interactions/interactions",title:"What are interactions?",description:"An Interaction is the message that your bot receives when a user initiates an application command or a message",source:"@site/docs/interactions/interactions.mdx",sourceDirName:"interactions",slug:"/interactions/",permalink:"/interactions/",editUrl:"https://github.com/DisnakeDev/guide/edit/main/guide/docs/interactions/interactions.mdx",tags:[],version:"current",lastUpdatedBy:"Abhigyan Tripathi",lastUpdatedAt:1642179184,formattedLastUpdatedAt:"1/14/2022",frontMatter:{},sidebar:"guideSidebar",previous:{title:"Creating cogs/extensions",permalink:"/getting-started/using-cogs"},next:{title:"Application Commands",permalink:"/interactions/application-commands"}},l=[{value:"Interactions and Bot Users",id:"interactions-and-bot-users",children:[],level:2},{value:"Responding to interactions",id:"responding-to-interactions",children:[{value:"<code>interaction.response</code>",id:"interactionresponse",children:[],level:3},{value:"<code>interaction.followup</code>",id:"interactionfollowup",children:[],level:3}],level:2}],m=(a="DocsLink",function(e){return console.warn("Component "+a+" was not imported, exported, or provided by MDXProvider as global scope"),(0,r.kt)("div",e)}),u={toc:l};function h(e){var n=e.components,t=(0,i.Z)(e,s);return(0,r.kt)("wrapper",(0,o.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"what-are-interactions"},"What are interactions?"),(0,r.kt)("p",null,"An ",(0,r.kt)("strong",{parentName:"p"},"Interaction")," is the message that your bot receives when a user initiates an application command or a message\ncomponent."),(0,r.kt)("h2",{id:"interactions-and-bot-users"},"Interactions and Bot Users"),(0,r.kt)("p",null,"We're all used to the way that Discord bots have worked for a long time. You make an application in\n",(0,r.kt)("a",{parentName:"p",href:"https://discord.com/developers/applications"},"Developer Portal"),", make a new bot user, and copy the token. Interactions\nbring something entirely new - the ability to interact with an application ",(0,r.kt)("em",{parentName:"p"},"without needing a bot user in the guild"),".\nResponding to the interaction doesn't require a bot token."),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"disnake")," is primarily focused on using the gateway events, so you still need a bot user. Check out\n",(0,r.kt)("a",{parentName:"p",href:"https://github.com/hikari-py/hikari"},(0,r.kt)("inlineCode",{parentName:"a"},"hikari-py"))," with their REST-API part for this purpose."),(0,r.kt)("p",null,"Welcome to the new world."),(0,r.kt)("h2",{id:"responding-to-interactions"},"Responding to interactions"),(0,r.kt)("p",null,'You have only 3 seconds to respond to the interaction. If do not have time to do it, Discord will shown "This\ninteraction failed" error.'),(0,r.kt)("p",null,"In fact, there are 3 types of interactions:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)(m,{reference:"disnake.ApplicationCommandInteraction",mdxType:"DocsLink"})," (for ",(0,r.kt)("a",{href:"/interactions/application-commands"},"application commands"),")"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)(m,{reference:"disnake.MessageInteraction",mdxType:"DocsLink"})," (for ",(0,r.kt)("a",{href:"/interactions/message-components"},"message components"),")"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)(m,{reference:"disnake.Interaction",mdxType:"DocsLink"})," (a base class, usually not used)")),(0,r.kt)("p",null,"But responding is the same for both interactions types."),(0,r.kt)("h3",{id:"interactionresponse"},(0,r.kt)("inlineCode",{parentName:"h3"},"interaction.response")),(0,r.kt)(m,{reference:"disnake.Interaction.response",mdxType:"DocsLink"},"response")," attribute returns a ",(0,r.kt)(m,{reference:"disnake.InteractionResponse",mdxType:"DocsLink"},"InteractionResponse")," instance that has 4 usable methods. A response can ",(0,r.kt)("b",null,"only be done once"),". If you want to send secondary messages, consider using a ",(0,r.kt)(m,{reference:"disnake.Interaction.followup",mdxType:"DocsLink"},"followup")," webhook instead.",(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)(m,{reference:"disnake.InteractionResponse.send_message",mdxType:"DocsLink"},"send_message")," - Sends response message"),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)(m,{reference:"disnake.InteractionResponse.edit_message",mdxType:"DocsLink"},"edit_message")," - Edits original message, you're unable to use this in application command because there are no message while you responding"),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)(m,{reference:"disnake.InteractionResponse.defer",mdxType:"DocsLink"},"defer")," - Defers the interaction"),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)(m,{reference:"disnake.InteractionResponse.is_done",mdxType:"DocsLink"},"is_done")," - Indicates whether an interaction response has been done before")),(0,r.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)(m,{reference:"disnake.InteractionResponse.defer",mdxType:"DocsLink"},"defer"),' works differently depending on the type of interaction. It creates "Bot is thinking..." message for application commands and doesn\'t throw "This interaction failed" if you\'re not going to respond to message components.')),(0,r.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},"If you're going to run long processes (more than 3 seconds) while responding, you must first defer the interaction. Then\nwhen your response is ready you can edit the message using"),(0,r.kt)(m,{reference:"disnake.InteractionResponse.edit_original_message",mdxType:"DocsLink"},"edit_original_message")," method.")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python",metastring:'title="example.py"',title:'"example.py"'},'@bot.slash_command()\nasync def ping(inter: ApplicationCommandInteraction):\n    await inter.response.send_message("Pong!")\n\n\n@bot.slash_command()\nasync def defer(inter: ApplicationCommandInteraction):\n    await inter.response.defer()\n    await asyncio.sleep(10)\n    await inter.edit_original_message("The wait is over, my comrades!")\n')),(0,r.kt)("h3",{id:"interactionfollowup"},(0,r.kt)("inlineCode",{parentName:"h3"},"interaction.followup")),(0,r.kt)("p",null,"Often used when you need to send secondary messages after responding."))}h.isMDXComponent=!0}}]);